#!/bin/bash

# Black        0;30     Dark Gray     1;30
# Red          0;31     Light Red     1;31
# Green        0;32     Light Green   1;32
# Brown/Orange 0;33     Yellow        1;33
# Blue         0;34     Light Blue    1;34
# Purple       0;35     Light Purple  1;35
# Cyan         0;36     Light Cyan    1;36
# Light Gray   0;37     White         1;37

RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

TIMESTAMP=`date +%Y-%m-%d_%H-%M-%S`

CUDA_PATH=/share/apps/cuda/11.4
GPU_MEM_TRACK_PATH=~/gpu-memory-tracker
LIB_MEM_TRACK_PATH=$GPU_MEM_TRACK_PATH/build/libMemoryTracker.so

TARGET_BINARY=${@: -1}
TARGET_NAME=$(basename $TARGET_BINARY)

# `OUT_FILE_NAME` and `MEM_ACCESS_SIZE` variables are used by MemoryTracker.cpp
# TODO: Read them as command-line args
export OUT_FILE_NAME=output/${TARGET_NAME}_${TIMESTAMP}.csv
export MEM_ACCESS_SIZE=8192

export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$CUDA_PATH/compute-sanitizer/
export LD_PRELOAD=$LIB_MEM_TRACK_PATH

mkdir -p output

echo -e "${NC}"
echo -e "[GPU Memory Tracker] Starting on '${GREEN}${TARGET_NAME}'"
echo -e "${NC}"

$TARGET_BINARY

echo -e "${NC}"
echo -e "[GPU Memory Tracker] Captured data is stored in the output file '${GREEN}${OUT_FILE_NAME}'"
echo -e "${NC}"